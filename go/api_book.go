/*
 * Book Blog API
 *
 * This is a blog about books.
 *
 * API version: 0.0.7
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"github.com/boltdb/bolt"
	"log"
	"net/http"
	"regexp"
	"strconv"
)

//GetBook 根据请求读取Book，并返回
func GetBook(w http.ResponseWriter, r *http.Request) {
	reg := regexp.MustCompile(`[0-9]+`)
	bookID, _ := strconv.Atoi(reg.FindString(r.URL.Path))
	var book []byte

	db, err := bolt.Open("./database/bookblog.db", 0600, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer db.Close()

	db.View(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte("Book"))
		book = b.Get([]byte(itob(int32(bookID))))
		return nil
	})

	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.Header().Set("Access-Control-Allow-Origin", "*")
	w.Header().Set("Access-Control-Allow-Methods", "PUT,POST,GET,DELETE,OPTIONS")
	w.Header().Set("Access-Control-Allow-Headers", "x-requested-with,content-type")
	w.WriteHeader(http.StatusOK)
	w.Write(book)
}

//GetBooks 根据请求读取相应Book[]并返回
func GetBooks(w http.ResponseWriter, r *http.Request) {
	var i, j, pageNumber int = 0, 0, 1
	var book []Book
	if r.URL.Query()["pageNumber"] != nil {
		pageNumber, _ = strconv.Atoi(r.URL.Query()["pageNumber"][0])
	}

	db, err := bolt.Open("./database/bookblog.db", 0600, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer db.Close()

	db.View(func(tx *bolt.Tx) error {
		var objBook Book
		b := tx.Bucket([]byte("Book"))
		c := b.Cursor()
		for k, v := c.First(); k != nil; k, v = c.Next() {
			if ((pageNumber-1)*10 > i || i >= pageNumber*10) && pageNumber != -1 {
				i++
				continue
			}
			json.Unmarshal(v, &objBook)
			book = append(book, objBook)
			j++
			i++
		}
		return nil
	})

	var buf []byte
	if pageNumber != -1 {
		buf, _ = json.Marshal(Books{int32(i), book})
	} else {
		buf, _ = json.Marshal(Books{int32(i), book})
	}
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.Header().Set("Access-Control-Allow-Origin", "*")
	w.Header().Set("Access-Control-Allow-Methods", "PUT,POST,GET,DELETE,OPTIONS")
	w.Header().Set("Access-Control-Allow-Headers", "x-requested-with,content-type")
	w.WriteHeader(http.StatusOK)
	w.Write(buf)
}
